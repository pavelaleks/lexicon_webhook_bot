import asyncio
import logging
import os

from aiohttp import web
from aiogram import Bot, Dispatcher
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.webhook.aiohttp_server import SimpleRequestHandler, setup_application
from dotenv import load_dotenv

from keyboards import start_options_kb

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env
load_dotenv()
TOKEN = os.getenv("BOT_TOKEN")
ADMIN_ID = os.getenv("ADMIN_ID")

bot = Bot(token=TOKEN)
dp = Dispatcher(storage=MemoryStorage())

# –ü—Ä–∏–º–µ—Ä –ø—Ä–æ—Å—Ç–æ–≥–æ —Ö—ç–Ω–¥–ª–µ—Ä–∞
@dp.message()
async def echo(message):
    print(f"[LOG] {message.from_user.full_name}: {message.text}")  # –ª–æ–≥ –≤ –∫–æ–Ω—Å–æ–ª—å Render
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–µ–ø–µ—Ä—å —Ä–∞–±–æ—Ç–∞—é –ø–æ webhook üöÄ")

async def on_startup(app):
    await bot.set_webhook(f"{os.getenv('WEBHOOK_URL')}")

async def on_shutdown(app):
    await bot.delete_webhook()
    await bot.session.close()

# –ó–∞–ø—É—Å–∫ aiohttp-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
async def create_app():
    app = web.Application()
    app.on_startup.append(on_startup)
    app.on_shutdown.append(on_shutdown)

    # –¢–æ–ª—å–∫–æ webhook –¥–ª—è Telegram
    SimpleRequestHandler(dispatcher=dp, bot=bot).register(app, path="/webhook")
    setup_application(app, dp, bot=bot)
    return app

if __name__ == "__main__":
    web.run_app(create_app(), port=int(os.getenv("PORT", 8080)))
